queue:
  demands: 
    - msbuild
    - visualstudio
    - vstest

variables:
  Solution: "Community.Activities.sln"
  BuildConfiguration: "Release"
  BuildPlatform: "Any CPU"

steps:

- task: PowerShell@1
  displayName: "Set Build Version"
  inputs:
    scriptType: "inlineScript"
    inlineScript: " $major = 1 \n
$minor = 0 \n
$now = Get-Date \n
$y2k = Get-Date -Year 2000 -Month 1 -Day 1 \n
$build = [int]($now - $y2k).TotalDays \n
$revision = [int]($now.TimeOfDay.TotalSeconds / 2) \n
$version = \"$major.$minor.$build.$revision\" \n
Write-Host \"$version\" \n
Write-Host \"##vso[build.updatebuildnumber]$version\""


- task: NuGetToolInstaller@0
  displayName: "Use NuGet 4.3.0"

- task: NuGetCommand@2
  displayName: "Restore Nuget packages"
  inputs:
    restoreSolution: "$(Solution)"
    feedsToUse: "config"
    nugetConfigPath: ".nuget/NuGet.Config"

- task: VSBuild@1
  displayName: "Build Solution"
  inputs:
    solution: '$(Solution)'
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'

- task: VSTest@2
  displayName: "Run unit tests"
  inputs:
    testAssemblyVer2: |
          **\$(BuildConfiguration)\*test*.dll
          !**\obj\**
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'

- task: PowerShell@1
  displayName: "Set 'PackagesToPack' variable"
  inputs:
    scriptType: "inlineScript"
    inlineScript: "$files = Get-ChildItem *.nuspec -Recurse | foreach {$_.Name -replace '.nuspec','.csproj'} \n
    $pattern = '' \n
    ForEach($file in $files) { $pattern+=\"**\\$file;\" } \n
   Write-Host \"##vso[task.setvariable variable=PackagesToPack;]$pattern\" "

- task: NuGetCommand@2
  displayName: "Create Nuget packages"
  inputs:
    command: "pack"
    packagesToPack: "$(PackagesToPack)"
    versioningScheme: "byBuildNumber"
    includeSymbols: "true"
    outputDir: "$(ArtifactsOutputPath)"
    configurationToPack: "$(BuildConfiguration)"
    includeReferencedProjects: "true"

- task: PublishBuildArtifacts@1
  displayName: "Publish symbols"
  inputs:
    PathtoPublish: '$(ArtifactsOutputPath)'
    ArtifactName: 'Setup'
    ArtifactType: 'Container'
